<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.ej.hgj.dao.user.UserRoleDaoMapper">

    <resultMap id="BaseMap" type="com.ej.hgj.entity.user.UserRole">
        <result column="id" jdbcType="VARCHAR" property="id"/>
        <result column="project_num" jdbcType="VARCHAR" property="projectNum"/>
        <result column="staff_id" jdbcType="VARCHAR" property="staffId"/>
        <result column="role_id" jdbcType="VARCHAR" property="roleId"/>
        <result column="create_by" jdbcType="VARCHAR" property="createBy"/>
        <result column="update_by" jdbcType="VARCHAR" property="updateBy"/>
        <result column="create_time" jdbcType="TIMESTAMP" property="createTime"/>
        <result column="update_time" jdbcType="TIMESTAMP" property="updateTime"/>
        <result column="delete_flag" jdbcType="INTEGER" property="deleteFlag"/>
    </resultMap>
    <sql id="Base_Column_List" >
        id, project_num, staff_id, role_id, create_time, update_time, create_by,
        update_by, delete_flag
    </sql>

    <!-- 根据主键查询-->
    <select id="getById" resultMap="BaseMap" parameterType="java.lang.String" >
        select
            <include refid="Base_Column_List" />
        from t_user_role
        where id = #{id}
    </select>

    <!-- 根据主键查询-->
<!--    <select id="getByStaffId" resultMap="BaseMap" parameterType="java.lang.String" >-->
<!--        select-->
<!--        <include refid="Base_Column_List" />-->
<!--        from t_user_role-->
<!--        where staff_id = #{staffId}-->
<!--    </select>-->

    <!-- 根据userId查询-->
    <select id="getByUserId" resultMap="BaseMap" parameterType="java.lang.String" >
        select
        <include refid="Base_Column_List" />
        from t_user_role
        where staff_id = #{userId}
    </select>

    <!-- 根据用户号企业号查询-->
<!--    <select id="getByStaffIdAndCorpId" resultMap="BaseMap" parameterType="java.lang.String" >-->
<!--        select-->
<!--        <include refid="Base_Column_List" />-->
<!--        from t_user_role-->
<!--        where delete_flag = 0 and staff_id = #{staffId} and corp_id = #{corpId}-->
<!--    </select>-->

    <!-- 查询列表-->
    <select id="getList" resultMap="BaseMap"  parameterType="com.ej.hgj.entity.user.UserRole">
        select
        <include refid="Base_Column_List" />
        from t_user_role
        where delete_flag = 0
        <if test="staffId != null">
            and staff_id = #{staffId,jdbcType=VARCHAR}
        </if>
        <if test="roleId != null">
            and role_id = #{roleId,jdbcType=VARCHAR}
        </if>
        order by update_time desc
    </select>

    <!-- 查询列表-->
    <select id="getByUserAndRole" resultMap="BaseMap"  parameterType="java.lang.String">
        select
        ur.*
        from t_user_role ur inner join t_role r on r.id = ur.role_id
        where ur.delete_flag = 0
        and ur.staff_id = #{userId,jdbcType=VARCHAR}
        and r.role_name in('管理员','开发者')
    </select>

    <!-- 查询列表-->
    <select id="getUserRoleByMobile" resultMap="BaseMap"  parameterType="java.lang.String">
        select
               b.* from t_user a
                   inner join t_user_role b on a.user_id = b.staff_id
                   inner join t_role c on c.id = b.role_id
        where a.delete_flag = 0
          and b.delete_flag = 0
          and c.delete_flag = 0
          and c.role_name in('开发者')
          and a.mobile = #{mobile}
    </select>

    <!-- 保存-->
    <insert id="save" parameterType="com.ej.hgj.entity.user.UserRole" >
        insert into  t_user_role(
        <if test="id != null">
            `id`,
        </if>
        <if test="projectNum != null">
            `project_num`,
        </if>
        <if test="staffId != null">
            `staff_id`,
        </if>
        <if test="roleId != null">
            `role_id`,
        </if>
        <if test="createTime != null">
            `create_time`,
        </if>
        <if test="createBy != null">
            `create_by`,
        </if>
        <if test="updateTime != null">
            `update_time`,
        </if>
        <if test="updateBy != null">
            `update_by`,
        </if>
        <if test="deleteFlag != null">
            `delete_flag`
        </if>
        )
        <trim prefix="values (" suffix=")" suffixOverrides="," >
            <if test="id != null" >
                #{id,jdbcType=VARCHAR},
            </if>
            <if test="projectNum != null" >
                #{projectNum,jdbcType=VARCHAR},
            </if>
            <if test="staffId != null" >
                #{staffId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null" >
                #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="createTime != null">
                #{createTime,jdbcType=TIMESTAMP},
            </if>
            <if test="createBy != null">
                #{createBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                #{updateTime,jdbcType=TIMESTAMP},
            </if>
            <if test="updateBy != null">
                #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="deleteFlag != null">
                #{deleteFlag,jdbcType=INTEGER}
            </if>
        </trim>
    </insert>

    <!-- 更新-->
    <update id="update" parameterType="com.ej.hgj.entity.user.UserRole" >
        update
        t_user_role
        <set>
            <if test="projectNum != null">
                project_num = #{projectNum,jdbcType=VARCHAR},
            </if>
            <if test="staffId != null">
                staff_id = #{staffId,jdbcType=VARCHAR},
            </if>
            <if test="roleId != null">
                role_id = #{roleId,jdbcType=VARCHAR},
            </if>
            <if test="updateBy != null">
                update_by = #{updateBy,jdbcType=VARCHAR},
            </if>
            <if test="updateTime != null">
                update_time = #{updateTime,jdbcType=TIMESTAMP},
            </if>
        </set>
        where staff_id = #{staffId,jdbcType=VARCHAR}
    </update>

    <!-- 更新-->
<!--    <update id="updateByStaffIdAndCorpId" parameterType="com.ej.hgj.entity.user.UserRole" >-->
<!--        update-->
<!--        t_user_role-->
<!--        <set>-->
<!--            <if test="projectNum != null">-->
<!--                project_num = #{projectNum,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="staffId != null">-->
<!--                staff_id = #{staffId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="roleId != null">-->
<!--                role_id = #{roleId,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="updateBy != null">-->
<!--                update_by = #{updateBy,jdbcType=VARCHAR},-->
<!--            </if>-->
<!--            <if test="updateTime != null">-->
<!--                update_time = #{updateTime,jdbcType=TIMESTAMP},-->
<!--            </if>-->
<!--        </set>-->
<!--        where staff_id = #{staffId,jdbcType=VARCHAR} and corp_id = #{corpId,jdbcType=VARCHAR}-->
<!--    </update>-->

    <!-- 删除-->
<!--    <update id="delete" parameterType="java.lang.String" >-->
<!--        delete from t_user_role where staff_id=#{id}-->
<!--    </update>-->

    <update id="deleteByUserId" parameterType="java.lang.String" >
        delete from t_user_role where staff_id=#{userId}
    </update>

    <!-- 根据用户号企业号删除-->
<!--    <update id="deleteByStaffIdAndCorpId" parameterType="java.lang.String" >-->
<!--        delete from t_user_role where staff_id = #{staffId} and corp_id = #{corpId}-->
<!--    </update>-->

</mapper>
